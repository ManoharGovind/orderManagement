name: SonarCloud Analysis with PostgreSQL

on:
  push:
    branches:
      - v1
      - master
  pull_request:
    branches:
      - v1
      - master

jobs:
  sonarcloud:
    name: SonarCloud Scan with PostgreSQL
    runs-on: ubuntu-latest

    services:
      # PostgreSQL service
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: ordersdb
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U myuser" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
      # Step 1: Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Java (Java 17 in your case)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Step 3: Cache Maven dependencies to speed up build
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Set up environment variables for database
      - name: Set up environment
        run: |
          echo "DATABASE_URL=jdbc:postgresql://localhost:5432/ordersdb" >> $GITHUB_ENV
          echo "DATABASE_USERNAME=admin" >> $GITHUB_ENV
          echo "DATABASE_PASSWORD=admin" >> $GITHUB_ENV

      # Step 5: Build the project
      - name: Build with Maven
        run: mvn clean verify

      # Step 6: Run SonarCloud analysis
      - name: SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn sonar:sonar \
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
          -Dsonar.organization=${{ secrets.SONAR_ORG }} \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
